name: Deploy Docs to Vercel

on:
  push:
    branches:
      - main
    paths:
      - 'apps/docs/**'
      - '.github/workflows/deploy-docs.yml'
      - 'vercel.json'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: apps/docs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/docs/package-lock.json

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install root dependencies
        run: pnpm install --frozen-lockfile
        working-directory: .

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        id: vercel-pull
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: apps/docs

      - name: Build Project
        run: pnpm run build
        env:
          NODE_ENV: production

      - name: Deploy Project to Vercel
        id: vercel-deploy
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --prod
        working-directory: apps/docs
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
